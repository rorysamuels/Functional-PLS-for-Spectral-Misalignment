2171.19751,
2176.20459,
2181.21143,
2186.21851,
2191.22559,
2196.23267,
2201.23950,
2206.24658,
2211.25366,
2216.26074,
2221.26782,
2226.27490,
2231.28174,
2236.28882,
2241.29590,
2246.30298,
2251.30981,
2256.31689,
2261.32397,
2266.33105,
2271.33813,
2276.34521,
2281.35205,
2286.35913,
2291.36621,
2296.37329,
2301.38013,
2306.38721,
2311.39429,
2316.40137,
2321.40820,
2326.41528,
2331.42236,
2336.42944,
2341.43652,
2346.44360,
2351.45044,
2356.45752,
2361.46460,
2366.47168,
2371.47852,
2376.48560,
2381.49268,
2386.49976,
2391.50659,
2396.51392,
2401.52075,
2406.52783,
2411.53491,
2416.54199,
2421.54883,
2426.55591,
2431.56299,
2436.57007,
2441.57690,
2446.58398,
2451.59106,
2456.59814,
2461.60498,
2466.61230,
2471.61914,
2476.62622,
2481.63330,
2486.64038,
2491.64722,
2496.65430,
2501.66138,
2506.66846,
2511.67529)
neon_grd[-bad_bands]
tibble(x = X[1,], wavelength = neon_grd[-bad_bands]) %>%
ggplot(aes(wavelength,x))+
geom_point()+
theme_bw()
y %>% length()
new_grd <- neon_grd[-bad_bands]
tibble(x = X[1,], wavelength = neon_grd[-bad_bands]) %>%
ggplot(aes(wavelength,x))+
geom_point()+
theme_bw()
tibble(x = X_A[1,], wavelength = neon_grd[-bad_bands]) %>%
ggplot(aes(wavelength,x))+
geom_point()+
theme_bw()
tibble(x = X_A[1,], wavelength = neon_grd[-bad_bands]) %>%
ggplot(aes(wavelength,x))+
geom_line()+
theme_bw()
tibble(x = X_A[1,], wavelength = neon_grd[-bad_bands]) %>%
ggplot(aes(wavelength,x))+
geom_line()+
theme_bw()
tibble(x = X[1,], wavelength = neon_grd[-bad_bands]) %>%
ggplot(aes(wavelength,x))+
geom_point()+
theme_bw()
tibble(x = X_A[1,], wavelength = neon_grd[-bad_bands]) %>%
ggplot(aes(wavelength,x))+
geom_line()+
theme_bw()
tibble(x = X_A[1,], wavelength = neon_grd[-bad_bands]) %>%
ggplot(aes(wavelength,x))+
geom_point()+
theme_bw()
tibble(x = X_A[1,], wavelength = grd_A) %>%
ggplot(aes(wavelength,x))+
geom_point()+
theme_bw()
tibble(x = X_A[1,], wavelength = grd_A) %>%
ggplot(aes(wavelength,x))+
geom_line()+
theme_bw()
tibble(x = X_A[1,], wavelength = grdA) %>%
ggplot(aes(wavelength,x))+
geom_line()+
theme_bw()
tibble(x = X[1,], wavelength = neon_grd[-bad_bands]) %>%
ggplot(aes(wavelength,x))+
geom_point()+
theme_bw()
tibble(x = X_A[1,], wavelength = grdA) %>%
ggplot(aes(wavelength,x))+
geom_line()+
theme_bw()
tibble(x = X_A[1,], wavelength = new_grd) %>%
ggplot(aes(wavelength,x))+
geom_line()+
theme_bw()
X_A
tibble(x = X[1,], wavelength = neon_grd) %>%
ggplot(aes(wavelength,x))+
geom_point()+
theme_bw()
tibble(x = X[1,], wavelength = neon_grd)) %>%
new_grd <- neon_grd[-bad_bands]
tibble(x = X[1,], wavelength = neon_grd)) %>%
tibble(x = X[1,], wavelength = new_grd)) %>%
tibble(x = X[1,], wavelength = new_grd) %>%
ggplot(aes(wavelength,x))+
geom_point()+
theme_bw()
tibble(x = X[1,], wavelength = new_grd) %>%
ggplot(aes(wavelength,x))+
geom_line()+
theme_bw()
tibble(x = X[1,], wavelength = new_grd) %>%
ggplot(aes(wavelength,x))+
geom_point()+
theme_bw()
tibble(x = X_A[1,], wavelength = new_grd) %>%
ggplot(aes(wavelength,x))+
geom_line()+
theme_bw()
tibble(x = X_B[1,], wavelength = new_grd) %>%
ggplot(aes(wavelength,x))+
geom_line()+
theme_bw()
tibble(x = X_B[1,], wavelength = grd_B) %>%
ggplot(aes(wavelength,x))+
geom_line()+
theme_bw()
tibble(x = X_B[1,], wavelength = grdB) %>%
ggplot(aes(wavelength,x))+
geom_line()+
theme_bw()
tibble(x = X[1,], wavelength = grdA) %>%
ggplot(aes(wavelength,x))+
geom_point()+
theme_bw()
tibble(x = X[1,], wavelength = new_grd) %>%
ggplot(aes(wavelength,x))+
geom_point()+
theme_bw()
tibble(x = X_A[1,], wavelength = new_grd) %>%
ggplot(aes(wavelength,x))+
geom_line()+
theme_bw()
tibble(x = X_A[1,], wavelength = grdA) %>%
ggplot(aes(wavelength,x))+
geom_line()+
theme_bw()
tibble(x = X_A[1,], wavelength = new_grd) %>%
ggplot(aes(wavelength,x))+
geom_line()+
theme_bw()
tibble(x = X_A[1,], wavelength = grdA) %>%
ggplot(aes(wavelength,x))+
geom_line()+
theme_bw()
tibble(x = X_A[1,], wavelength = new_grd) %>%
ggplot(aes(wavelength,x))+
geom_line()+
theme_bw()
tibble(x = X_A[1,], wavelength = grdA) %>%
ggplot(aes(wavelength,x))+
geom_line()+
theme_bw()
tibble(x = X_B[1,], wavelength = grdB) %>%
ggplot(aes(wavelength,x))+
geom_line()+
theme_bw()
tibble(x = X_A[1,], wavelength = grdA) %>%
ggplot(aes(wavelength,x))+
geom_point()+
theme_bw()
tibble(x = X_B[1,], wavelength = grdB) %>%
ggplot(aes(wavelength,x))+
geom_point()+
theme_bw()
dim(X)
x_data %>% dim()
x_data$ID %>% unique() %>% length()
x_data
y_data$ID %>% unique() %>% length()
x_data %>% dim()
X %>% dim()
length(new_grd)
xy_data %>% dim()
x_data %>% dim()
y_data %>% dim()
x_data %>% dim()
y_data %>% dim()
y_data
xy_data
x_data %>% dim()
y_data
x_data
x_data %>% dim()
X %>% dim()
tibble(x = X[1,], wavelength = new_grd) %>%
ggplot(aes(wavelength,x))+
geom_point()+
theme_bw()
tibble(x = X_A[1,], wavelength = new_grd) %>%
ggplot(aes(wavelength,x))+
geom_line()+
theme_bw()
write_rds(neon_grd,"data/neon_grd.RDS")
neon_grd <- read_rds("data/neon_grd.RDS")
neon_grd
tibble(x = X[1,], wavelength = good_grd) %>%
ggplot(aes(wavelength,x))+
geom_point()+
theme_bw()
good_grd <- neon_grd[-bad_bands]
tibble(x = X[1,], wavelength = new_grd) %>%
ggplot(aes(wavelength,x))+
geom_point()+
theme_bw()
tibble(x = X[1,], wavelength = good_grd) %>%
ggplot(aes(wavelength,x))+
geom_point()+
theme_bw()
tibble(x = X[1,], wavelength = good_grd) %>%
ggplot(aes(wavelength,x))+
geom_point()+
theme_bw()
tibble(x = X[1,], wavelength = good_grd) %>%
ggplot(aes(wavelength,x))+
labs(y = "Reflectance")
tibble(x = X[1,], wavelength = good_grd) %>%
ggplot(aes(wavelength,x))+
labs(y = "Reflectance")+
geom_point()+
theme_bw()
tibble(x = X[1,], wavelength = good_grd) %>%
ggplot(aes(wavelength,x))+
labs(y = "Reflectance")+
geom_point()+
theme_bw()+
theme(text = element_text(size = 14))
tibble(x = X[1,], wavelength = good_grd) %>%
ggplot(aes(wavelength,x))+
ggtitle("Example Spectra (after removing bad bands)")+
labs(y = "Reflectance")+
geom_point()+
theme_bw()+
theme(text = element_text(size = 14))
ggtitle("Example Spectra)+
tibble(x = X[1,], wavelength = good_grd) %>%
ggplot(aes(wavelength,x))+
ggtitle("Example Spectra")+
```{r}
tibble(x = X[1,], wavelength = good_grd) %>%
ggplot(aes(wavelength,x))+
ggtitle("Example Spectra")+
labs(y = "Reflectance")+
geom_point()+
theme_bw()+
theme(text = element_text(size = 14))
tibble(x = X_A[1,], wavelength = new_grd) %>%
ggplot(aes(wavelength,x))+
geom_line()+
theme_bw()
tibble(x = X_A[1,], wavelength = grdA) %>%
ggplot(aes(wavelength,x))+
geom_line()+
theme_bw()
tibble(x = X_A[1,], wavelength = good_grd) %>%
ggplot(aes(wavelength,x))+
geom_line()+
theme_bw()
tibble(x = X_A[1,], wavelength = good_grd) %>%
ggplot(aes(wavelength,x))+
geom_line()+
theme_bw()
tibble(x = X_A[1,], wavelength = grdA) %>%
ggplot(aes(wavelength,x))+
geom_line()+
theme_bw()
tibble(x = X[1,], wavelength = good_grd) %>%
ggplot(aes(wavelength,x))+
ggtitle("Example Spectra: Smoothed")+
geom_line()+
theme_bw()+
theme(text = element_text(size = 14))
tibble(x = X[1,], wavelength = good_grd) %>%
ggplot(aes(wavelength,x))+
ggtitle("Example Spectra: Smoothed")+
geom_smooth()+
theme_bw()+
theme(text = element_text(size = 14))
tibble(x = X[1,], wavelength = good_grd) %>%
ggplot(aes(wavelength,x))+
ggtitle("Example Spectra: Smoothed")+
geom_line()+
theme_bw()+
theme(text = element_text(size = 14))
tibble(x = X[1,], wavelength = good_grd) %>%
ggplot(aes(wavelength,x))+
ggtitle("Example Spectra")+
labs(y = "Reflectance")+
geom_point()+
theme_bw()+
theme(text = element_text(size = 14))
tibble(x = X_B[1,], wavelength = grdB) %>%
ggplot(aes(wavelength,x))+
ggtitle("Example Spectra: Smoothed + Scaled Grid")+
geom_line()+
theme_bw()+
theme(text = element_text(size = 14))
tibble(x = X_B[1,], wavelength = grdB) %>%
ggplot(aes(wavelength,x))+
ggtitle("Example Spectra: Smoothed + Scaled Grid")+
geom_point()+
theme_bw()+
theme(text = element_text(size = 14))
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
library(latex2exp)
library(glue)
source('../example_generated_data.R')
getwd()
getwd("..")
getwd("../")
getwd("fpls_demo_cache")
getwd()
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
library(latex2exp)
library(glue)
setwd("..")
getwd()
setwd("..")
getwd()
source('../example_generated_data.R')
getwd()
source('../temp_file.R')
source('../temp_file.R')
a <- getwd()
source('../temp_file.R')
source('../temp_file.R')
a
source('../temp_file.R')
a
source('../temp_file.R')
b
a
getwd()
library(here)
install.packages("here")
library(here)
here()
source("../temp_file.R")
a
b
source("../example_generated_data.R")
library(tidyverse)
library(splines2)
library(pls)
library(here)
setwd(here())
source('functions.R')
# Read in data
x_data <- read_csv("data/AOP_Crown.csv")
source('functions.R')
# Read in data
x_data <- read_csv("data/AOP_Crown.csv")
site_trait_data <- read_csv("data/site_trait_data.csv")
y_data <- drop_na(tibble(ID = site_trait_data$SampleSiteID, y = site_trait_data$d15N))
xy_data <- inner_join(y_data,x_data)
refl_data <- xy_data[,20:445]
neon_grd <- read_rds("data/neon_grd.RDS")
bad_bands <- c(1:8,192:205,284:327,417:ncol(refl_data))
good_grd <- neon_grd[-bad_bands]
# Reflectance data
X <- matrix(unname(unlist(refl_data[,-bad_bands])), nrow = nrow(refl_data))
# Response
y <- xy_data$y
# Number of observations
n <- nrow(X)
# Original observation grid (scaled to unit interval)
pA <- ncol(X)
grdA <- seq(0,1,length.out = pA)
# Misaligned observtion grid
pB <- 150
grdB <- seq(0,1,length.out = pB)
# Degree for cubic B-splines
d <- 3
# Number of internal knots - 1
M <- 50
# Internal knots for basis functions
knots <- seq(0, 1, length.out = M+1)[-c(1,M+1)]
# Matrix of basis functions evaluated on original observation grid
basis_spectra <- bSpline(grdA, knots = knots, degree = d, intercept = T)
# Coefficients from basis expansion
A <- get_basis_coefs(X,basis_spectra)
# Spectral points matching original observation grid (instrument A)
X_A <- (A%*%t(predict(basis_spectra,grdA)))
# Spectral points on mislaigned grid (instrument B)
X_B <- (A%*%t(predict(basis_spectra,grdB)))
# Train/Test Split
set.seed(10)
train_ind <- sample(1:n,floor(.8*n))
X_A_train <- X_A[train_ind,]
X_B_train <- X_B[train_ind,]
X_A_test <- X_A[-train_ind,]
X_B_test <- X_B[-train_ind,]
y_train <- y[train_ind]
y_test <- y[-train_ind]
k <- 17
plsr_fit <- plsr(y_train~X_A_train, ncomp = k)
# Coefficients from plsr model
alpha <- (plsr_fit$coefficients[,,k])
# Coefficients closest to observavtion grid of spectra from instrument B
alpha_adj <- alpha[find_closest(grdA,grdB)]
# Predictions
pls_preds_A <- as.numeric(X_A_test%*%alpha)
pls_preds_B <- as.numeric(X_B_test%*%alpha_adj)
fplsr_fit <- fplsr(y_train, X_A_train, grd = grdA, M = 30, ncomp = k)
# Predictions
fpls_preds_A <- pred_fplsr(X_A_test, grdA, fplsr_fit)
fpls_preds_B <- pred_fplsr(X_B_test, grdB, fplsr_fit)
fplsr_fit_basis <- fplsr(y_train, X_A_train, grd = grdA, M = 30, M_x = 25, ncomp = k)
# Predictions
fpls_preds_A_basis <- pred_fplsr(X_A_test, grdA, fplsr_fit_basis)
fpls_preds_B_basis <- pred_fplsr(X_B_test, grdB, fplsr_fit_basis)
##### Results #####
pmse(pls_preds_A,y_test)
pmse(pls_preds_B,y_test)
pmse(fpls_preds_A,y_test)
pmse(fpls_preds_B,y_test)
pmse(fpls_preds_A_basis,y_test)
pmse(fpls_preds_B_basis,y_test)
# Misaligned observtion grid
pB <- 100
grdB <- seq(0,1,length.out = pB)
# Degree for cubic B-splines
d <- 3
# Number of internal knots - 1
M <- 50
# Internal knots for basis functions
knots <- seq(0, 1, length.out = M+1)[-c(1,M+1)]
# Matrix of basis functions evaluated on original observation grid
basis_spectra <- bSpline(grdA, knots = knots, degree = d, intercept = T)
# Coefficients from basis expansion
A <- get_basis_coefs(X,basis_spectra)
# Spectral points matching original observation grid (instrument A)
X_A <- (A%*%t(predict(basis_spectra,grdA)))
# Spectral points on mislaigned grid (instrument B)
X_B <- (A%*%t(predict(basis_spectra,grdB)))
# Train/Test Split
set.seed(10)
train_ind <- sample(1:n,floor(.8*n))
X_A_train <- X_A[train_ind,]
X_B_train <- X_B[train_ind,]
X_A_test <- X_A[-train_ind,]
X_B_test <- X_B[-train_ind,]
y_train <- y[train_ind]
y_test <- y[-train_ind]
k <- 17
plsr_fit <- plsr(y_train~X_A_train, ncomp = k)
# Coefficients from plsr model
alpha <- (plsr_fit$coefficients[,,k])
# Coefficients closest to observavtion grid of spectra from instrument B
alpha_adj <- alpha[find_closest(grdA,grdB)]
# Predictions
pls_preds_A <- as.numeric(X_A_test%*%alpha)
pls_preds_B <- as.numeric(X_B_test%*%alpha_adj)
fplsr_fit <- fplsr(y_train, X_A_train, grd = grdA, M = 30, ncomp = k)
# Predictions
fpls_preds_A <- pred_fplsr(X_A_test, grdA, fplsr_fit)
fpls_preds_B <- pred_fplsr(X_B_test, grdB, fplsr_fit)
fplsr_fit_basis <- fplsr(y_train, X_A_train, grd = grdA, M = 30, M_x = 25, ncomp = k)
# Predictions
fpls_preds_A_basis <- pred_fplsr(X_A_test, grdA, fplsr_fit_basis)
fpls_preds_B_basis <- pred_fplsr(X_B_test, grdB, fplsr_fit_basis)
##### Results #####
pmse(pls_preds_A,y_test)
pmse(pls_preds_B,y_test)
pmse(fpls_preds_A,y_test)
pmse(fpls_preds_B,y_test)
pmse(fpls_preds_A_basis,y_test)
pmse(fpls_preds_B_basis,y_test)
